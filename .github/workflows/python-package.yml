# Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml
name: CI

on:
    push:
        branches:
            - '*'
        tags:
            - '*'
    pull_request:

jobs:
    tests:
        name: Unit tests
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                include:
                    - os: ubuntu-latest
                      python-version: '3.13'
                      # numba doesn't yet support numpy/2.3; could be relaxed in the future
                      numpy-version: '<2.3'
                      scipy-version: ''
                      astropy-version: '<7'
                    - os: ubuntu-latest
                      python-version: '3.12'
                      numpy-version: '<2.3'
                      scipy-version: '<2'
                      astropy-version: '<7'
                    - os: ubuntu-latest
                      python-version: '3.11'
                      numpy-version: '<2.1'
                      scipy-version: '<2'
                      astropy-version: '<7'
                    # Similar to NERSC but with last NumPy < 2.
                    - os: ubuntu-latest
                      python-version: '3.10'
                      numpy-version: '<2'
                      scipy-version: '<1.9'
                      astropy-version: '<6.1'
        env:
            DESIUTIL_VERSION: 3.5.0
            # DESIMODEL: ${GITHUB_WORKSPACE}/desimodel
            # desisim -> specsim needs data/specpsf/psf-quicksim-rebin.fits which isn't in trimmed down test data
            DESIMODEL_DATA: trunk
            # DESISIM: ${GITHUB_WORKSPACE}/desisim
            DESISIM_TESTDATA_VERSION: main
            # DESI_ROOT: ${DESISIM}/desi
            # DESI_BASIS_TEMPLATES: ${DESI_ROOT}/spectro/templates/basis_templates/v3.2
            SIMQSO_REPO: desihub
            SIMQSO_VERSION: main

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Install System Packages
              run: sudo apt install libbz2-dev subversion
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              # setuptools version restriction due to specsim ah_helpers needing setuptools.package_index
              # which was removed in setuptools/80.3.0
              run: |
                python -m pip install --upgrade pip 'setuptools<80' wheel
                python -m pip install pytest
                python -m pip install git+https://github.com/desihub/desiutil.git@${DESIUTIL_VERSION}#egg=desiutil
                python -m pip install -r requirements.txt
                python -m pip install --upgrade --upgrade-strategy only-if-needed 'numpy${{ matrix.numpy-version }}'
                python -m pip install --upgrade --upgrade-strategy only-if-needed 'scipy${{ matrix.scipy-version }}'
                python -m pip install --upgrade --upgrade-strategy only-if-needed 'astropy${{ matrix.astropy-version }}'
                python -m pip install git+https://github.com/${SIMQSO_REPO}/simqso.git@${SIMQSO_VERSION}#egg=simqso
            - name: Verify Installation
              run: pip list
            - name: Install desimodel Data
              run: |
                mkdir -p ${GITHUB_WORKSPACE}/desimodel
                svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data ${GITHUB_WORKSPACE}/desimodel/data
            - name: Install surveyops snapshot
              env:
                SURVEYOPS_VERSION: '2.0'
              run: |
                wget -nv https://data.desi.lbl.gov/public/epo/example_files/surveyops_${SURVEYOPS_VERSION}_ops.tar.gz
                tar xzf surveyops_${SURVEYOPS_VERSION}_ops.tar.gz
            - name: Install desisim Data
              run: |
                wget https://github.com/desihub/desisim-testdata/archive/${DESISIM_TESTDATA_VERSION}.zip
                unzip ${DESISIM_TESTDATA_VERSION}.zip
            - name: Run the test
              run: PYTHONPATH=${GITHUB_WORKSPACE}/py DESIMODEL=${GITHUB_WORKSPACE}/desimodel DESISIM=${GITHUB_WORKSPACE} DESI_ROOT=${GITHUB_WORKSPACE}/desisim-testdata-${DESISIM_TESTDATA_VERSION}/desi DESI_BASIS_TEMPLATES=${GITHUB_WORKSPACE}/desisim-testdata-${DESISIM_TESTDATA_VERSION}/desi/spectro/templates/basis_templates/v3.2 DESI_SURVEYOPS=$(pwd) pytest

    coverage:
        name: Test coverage
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-22.04]
                python-version: ['3.10']
                astropy-version: ['<6.1']  # Compatibilty with desiconda 20240425-2.2.0.
                fitsio-version: ['<2']
                numpy-version: ['<1.23']  # Compatibilty with desiconda 20240425-2.2.0.
                scipy-version: ['<1.9']
        env:
            DESIUTIL_VERSION: 3.4.3
            # DESIMODEL: ${GITHUB_WORKSPACE}/desimodel
            # desisim -> specsim needs data/specpsf/psf-quicksim-rebin.fits which isn't in trimmed down test data
            DESIMODEL_DATA: trunk
            # DESISIM: ${GITHUB_WORKSPACE}/desisim
            DESISIM_TESTDATA_VERSION: main
            # DESI_ROOT: ${DESISIM}/desi
            # DESI_BASIS_TEMPLATES: ${DESI_ROOT}/spectro/templates/basis_templates/v3.2
            SIMQSO_REPO: desihub
            SIMQSO_VERSION: main

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Install System Packages
              run: sudo apt install libbz2-dev subversion
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip 'setuptools<80' wheel
                python -m pip install pytest pytest-cov coveralls
                python -m pip install git+https://github.com/desihub/desiutil.git@${DESIUTIL_VERSION}#egg=desiutil
                python -m pip install -r requirements.txt
                python -m pip install -U 'numpy${{ matrix.numpy-version }}'
                python -m pip install -U 'scipy${{ matrix.scipy-version }}'
                python -m pip install -U 'astropy${{ matrix.astropy-version }}'
                python -m pip install git+https://github.com/${SIMQSO_REPO}/simqso.git@${SIMQSO_VERSION}#egg=simqso
                python -m pip cache remove fitsio
                python -m pip install --no-deps --force-reinstall --ignore-installed 'fitsio${{ matrix.fitsio-version }}'
            - name: Verify Installation
              run: pip list
            - name: Install desimodel Data
              run: |
                mkdir -p ${GITHUB_WORKSPACE}/desimodel
                svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data ${GITHUB_WORKSPACE}/desimodel/data
            - name: Install surveyops snapshot
              env:
                SURVEYOPS_VERSION: '2.0'
              run: |
                wget -nv https://data.desi.lbl.gov/public/epo/example_files/surveyops_${SURVEYOPS_VERSION}_ops.tar.gz
                tar xzf surveyops_${SURVEYOPS_VERSION}_ops.tar.gz
            - name: Install desisim Data
              run: |
                wget https://github.com/desihub/desisim-testdata/archive/${DESISIM_TESTDATA_VERSION}.zip
                unzip ${DESISIM_TESTDATA_VERSION}.zip
            - name: Run the test
              run: PYTHONPATH=${GITHUB_WORKSPACE}/py DESIMODEL=${GITHUB_WORKSPACE}/desimodel DESISIM=${GITHUB_WORKSPACE} DESI_ROOT=${GITHUB_WORKSPACE}/desisim-testdata-${DESISIM_TESTDATA_VERSION}/desi DESI_BASIS_TEMPLATES=${GITHUB_WORKSPACE}/desisim-testdata-${DESISIM_TESTDATA_VERSION}/desi/spectro/templates/basis_templates/v3.2 DESI_SURVEYOPS=$(pwd) pytest --cov
            - name: Coveralls
              env:
                COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: coveralls

    docs:
        name: Doc test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip wheel setuptools Sphinx sphinx-rtd-theme
            - name: Test the documentation
              run: sphinx-build -W --keep-going -b html doc doc/_build/html

    style:
        name: Style check
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ['3.10']

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip setuptools wheel pycodestyle
            - name: Test the style; failures are allowed
              # This is equivalent to an allowed falure.
              continue-on-error: true
              run: pycodestyle --count py/desisim
